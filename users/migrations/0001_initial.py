# Generated by Django 5.1.2 on 2025-03-21 05:52

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, help_text="用户的姓名", max_length=100, verbose_name="姓名"
                    ),
                ),
                (
                    "id_card",
                    models.CharField(
                        blank=True,
                        help_text="用户的身份证号码",
                        max_length=18,
                        verbose_name="身份证号",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        error_messages={"unique": "该邮箱已被注册。"},
                        max_length=254,
                        unique=True,
                        verbose_name="电子邮箱",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        help_text="请填写有效的手机号码",
                        max_length=20,
                        verbose_name="联系电话",
                    ),
                ),
                (
                    "admin_level",
                    models.CharField(
                        choices=[
                            ("super", "超级管理员"),
                            ("normal", "普通管理员"),
                            ("none", "无权限"),
                        ],
                        default="none",
                        help_text="用户的管理权限级别",
                        max_length=10,
                        verbose_name="管理员级别",
                    ),
                ),
                (
                    "is_librarian",
                    models.BooleanField(
                        default=False, help_text="标记用户是否为图书馆工作人员", verbose_name="馆员身份"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="用户所属的用户组",
                        related_name="customuser_groups",
                        related_query_name="customuser",
                        to="auth.group",
                        verbose_name="所属用户组",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="用户的特定权限",
                        related_name="customuser_permissions",
                        related_query_name="customuser",
                        to="auth.permission",
                        verbose_name="用户权限",
                    ),
                ),
            ],
            options={
                "verbose_name": "系统用户",
                "verbose_name_plural": "系统用户",
                "ordering": ["-date_joined"],
                "permissions": [("manage_normal_admin", "可以管理普通管理员")],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserActionLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action", models.CharField(max_length=100)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
